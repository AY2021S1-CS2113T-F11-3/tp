@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":Parser" as Parser LOGIC_COLOR
participant ":EditChapterCommand" as EditChapterCommand LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Access" as Access MODEL_COLOR
participant ":Module" as Module MODEL_COLOR
participant ":ChapterList" as ChapterList MODEL_COLOR
participant ":Chapter" as Chapter MODEL_COLOR
end box

box Storage STORAGE_COLOR_T1
participant ":Storage" as Storage STORAGE_COLOR
end box

[-> Parser : parse("edit 1 Chapter 1")
activate Parser

create EditChapterCommand
Parser -> EditChapterCommand : EditChapterCommand(0, "Chapter 1")
activate EditChapterCommand

EditChapterCommand --> Parser : c
deactivate EditChapterCommand

[<-- Parser : c
deactivate Parser
'Hidden arrow to position the destroy marker below the end of the activation bar.
[<-[hidden]- Parser
destroy Parser

[-> EditChapterCommand : execute()
activate EditChapterCommand

EditChapterCommand -> EditChapterCommand : editChapter()
activate EditChapterCommand

EditChapterCommand -> Access : getModule()
activate Access

Access --> EditChapterCommand : Module
deactivate Access

EditChapterCommand -> Module : getChapters()
activate Module

Module --> EditChapterCommand : ChapterList
deactivate Module
'Hidden arrow to position the destroy marker below the end of the activation bar.
[<-[hidden]- EditChapterCommand
destroy Module

EditChapterCommand -> ChapterList : getChapter(editIndex)
activate ChapterList

ChapterList --> EditChapterCommand : Chapter
deactivate ChapterList

EditChapterCommand -> Storage : renameChapter(chapter, Module, Chapter)
activate Storage

Storage --> EditChapterCommand
deactivate Storage

EditChapterCommand -> Chapter : setChapterName(chapter)
activate Chapter

Chapter --> EditChapterCommand
deactivate Chapter

EditChapterCommand --> EditChapterCommand : result
deactivate EditChapterCommand

[<-- EditChapterCommand
deactivate EditChapterCommand

destroy ChapterList
destroy Chapter
@enduml
